{"ast":null,"code":"var _jsxFileName = \"/Users/myhzy/repos/React-Tests/react-test/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [searchBar, setSearchBar] = useState(\"\");\n  const [savedText, setSavedText] = useState([]);\n  const [pokemonData, setPokemonData] = useState(null);\n  console.log(savedText[savedText.length]);\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    // Add the new search term (from searchBar) to the savedText state\n    setSavedText(currentSaved => {\n      return [...currentSaved, {\n        title: searchBar\n      }];\n    });\n    setSearchBar(\"\"); // Clear the search bar after submitting\n  }\n  useEffect(() => {\n    if (savedText.length === 0) return; // Don't fetch if savedText is empty\n\n    const fetchData = async () => {\n      try {\n        const pokemonName = savedText[savedText.length - 1].title; // Get the latest title\n        const response = await fetch(`https://pokeapi.co/api/v2/pokemon/${pokemonName}`);\n        if (!response.ok) {\n          throw new Error(\"Pokemon not found\");\n        }\n        const data = await response.json();\n        setPokemonData(data);\n      } catch (err) {\n        console.error(err);\n        setPokemonData(null); // Clear pokemonData in case of an error\n      }\n    };\n    fetchData();\n  }, [savedText]); // Re-run the effect when savedText changes\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"pokemonName\",\n        placeholder: \"Enter Pokemon Name\",\n        value: searchBar,\n        onChange: e => setSearchBar(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Fetch Pokemon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), pokemonData ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: pokemonData.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this) // Display the Pokémon's name\n    : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this) // Show loading message while fetching\n    ]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"CIo/5lVD54bcL9cVeA7DF+puHwc=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","App","_s","searchBar","setSearchBar","savedText","setSavedText","pokemonData","setPokemonData","console","log","length","handleSubmit","e","preventDefault","currentSaved","title","fetchData","pokemonName","response","fetch","ok","Error","data","json","err","error","children","onSubmit","type","id","placeholder","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","name","_c","$RefreshReg$"],"sources":["/Users/myhzy/repos/React-Tests/react-test/src/App.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\n\nexport default function App() {\n  const [searchBar, setSearchBar] = useState(\"\");\n  const [savedText, setSavedText] = useState([]);\n  const [pokemonData, setPokemonData] = useState(null);\n\n  console.log(savedText[savedText.length]);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    // Add the new search term (from searchBar) to the savedText state\n    setSavedText((currentSaved) => {\n      return [...currentSaved, { title: searchBar }];\n    });\n\n    setSearchBar(\"\"); // Clear the search bar after submitting\n  }\n\n  useEffect(() => {\n    if (savedText.length === 0) return; // Don't fetch if savedText is empty\n\n    const fetchData = async () => {\n      try {\n        const pokemonName = savedText[savedText.length - 1].title; // Get the latest title\n        const response = await fetch(\n          `https://pokeapi.co/api/v2/pokemon/${pokemonName}`\n        );\n\n        if (!response.ok) {\n          throw new Error(\"Pokemon not found\");\n        }\n\n        const data = await response.json();\n        setPokemonData(data);\n      } catch (err) {\n        console.error(err);\n        setPokemonData(null); // Clear pokemonData in case of an error\n      }\n    };\n\n    fetchData();\n  }, [savedText]); // Re-run the effect when savedText changes\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          id=\"pokemonName\"\n          placeholder=\"Enter Pokemon Name\"\n          value={searchBar}\n          onChange={(e) => setSearchBar(e.target.value)}\n        />\n        <button>Fetch Pokemon</button>\n      </form>\n\n      {/* Conditionally render the name or loading message */}\n      {pokemonData ? (\n        <p>{pokemonData.name}</p> // Display the Pokémon's name\n      ) : (\n        <p>Loading...</p> // Show loading message while fetching\n      )}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}