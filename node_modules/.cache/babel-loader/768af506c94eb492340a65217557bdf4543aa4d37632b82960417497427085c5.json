{"ast":null,"code":"var _jsxFileName = \"/Users/myhzy/repos/React-Tests/react-test/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [newItem, setNewItem] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  console.log(todos);\n  function handleSubmit(e) {\n    e.preventDefault();\n    setTodos(currentTodos => {\n      return [...currentTodos, {\n        id: crypto.randomUUID(),\n        title: newItem,\n        completed: false\n      }];\n    });\n    setNewItem(\"\");\n  }\n  function toggleTodo(id, completed) {\n    setTodos(todos => {\n      return todos.map(todolist => {\n        if (todos.id === id) {\n          return {\n            ...todos,\n            completed\n          };\n        }\n      });\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"new-item-here\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"item\",\n          children: \"New item\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: newItem,\n          onChange: e => setNewItem(e.target.value),\n          type: \"text\",\n          id: \"item\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"header\",\n      children: \"Todo list\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list\",\n      children: todos.map(todo => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: todo.completed,\n              onChange: e => toggleTodo(todo.id, e.target.checked)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 17\n            }, this), todo.title]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this)\n        }, todo.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n/// By default we start with a value of false in the return object\n/// the checked value = false\n_s(App, \"PVaEI3+wUKBM87FnzcEqlRmVcr0=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","newItem","setNewItem","todos","setTodos","console","log","handleSubmit","e","preventDefault","currentTodos","id","crypto","randomUUID","title","completed","toggleTodo","map","todolist","children","onSubmit","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","target","type","todo","checked","_c","$RefreshReg$"],"sources":["/Users/myhzy/repos/React-Tests/react-test/src/App.js"],"sourcesContent":["import { useState } from \"react\";\n\nexport default function App() {\n  const [newItem, setNewItem] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n\n  console.log(todos);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    setTodos((currentTodos) => {\n      return [\n        ...currentTodos,\n        { id: crypto.randomUUID(), title: newItem, completed: false },\n      ];\n    });\n\n    setNewItem(\"\");\n  }\n\n  function toggleTodo(id, completed) {\n    setTodos((todos) => {\n      return todos.map((todolist) => {\n        if (todos.id === id) {\n          return { ...todos, completed };\n        }\n      });\n    });\n  }\n\n  return (\n    <>\n      <form onSubmit={handleSubmit} className=\"new-item-here\">\n        <div className=\"form-row\">\n          <label htmlFor=\"item\">New item</label>\n          <input\n            value={newItem}\n            onChange={(e) => setNewItem(e.target.value)}\n            type=\"text\"\n            id=\"item\"\n          />\n          <button>Add</button>\n        </div>\n      </form>\n      <h1 className=\"header\">Todo list</h1>\n      <ul className=\"list\">\n        {todos.map((todo) => {\n          return (\n            <li key={todo.id}>\n              <label>\n                <input\n                  type=\"checkbox\"\n                  checked={todo.completed}\n                  onChange={(e) => toggleTodo(todo.id, e.target.checked)}\n                />\n                {todo.title}\n              </label>\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n}\n\n/// By default we start with a value of false in the return object\n/// the checked value = false\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}