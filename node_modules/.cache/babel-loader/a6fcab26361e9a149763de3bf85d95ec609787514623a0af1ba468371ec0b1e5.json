{"ast":null,"code":"var _jsxFileName = \"/Users/myhzy/repos/React-Tests/react-test/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Board() {\n  _s();\n  const [square, setSquare] = useState(Array(9).fill(null));\n  const [xIsNext, setxIsNext] = useState(true);\n  function clicked(i) {\n    const nextSquare = square.slice();\n    if (square[i]) {\n      return;\n    }\n    if (xIsNext) {\n      nextSquare[i] = \"X\";\n    } else {\n      nextSquare[i] = \"O\";\n    }\n    setSquare(nextSquare);\n    setxIsNext(!xIsNext);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [/*#__PURE__*/_jsxDEV(Square, {\n        value: square[0],\n        clicked: () => clicked(0)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: square[1],\n        clicked: () => clicked(1)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: square[2],\n        clicked: () => clicked(2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [/*#__PURE__*/_jsxDEV(Square, {\n        value: square[3],\n        clicked: () => clicked(3)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: square[4],\n        clicked: () => clicked(4)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: square[5],\n        clicked: () => clicked(5)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [/*#__PURE__*/_jsxDEV(Square, {\n        value: square[6],\n        clicked: () => clicked(6)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: square[7],\n        clicked: () => clicked(7)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: square[8],\n        clicked: () => clicked(8)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Board, \"Lv12zB8YeMbOkocc5jT7Jibh5vc=\");\n_c = Board;\nfunction Square({\n  clicked,\n  value\n}) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"square\",\n    onClick: clicked,\n    children: value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_c2 = Square;\nfunction calculateWinner(square) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (square[a] && square[a] === square[b] && square[a] === square[c]) {\n      return square[a];\n    }\n    return null;\n  }\n  console.log(lines);\n}\nvar _c, _c2;\n$RefreshReg$(_c, \"Board\");\n$RefreshReg$(_c2, \"Square\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Board","_s","square","setSquare","Array","fill","xIsNext","setxIsNext","clicked","i","nextSquare","slice","children","className","Square","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","onClick","_c2","calculateWinner","lines","length","a","b","c","console","log","$RefreshReg$"],"sources":["/Users/myhzy/repos/React-Tests/react-test/src/App.js"],"sourcesContent":["import { useState } from \"react\";\n\nexport default function Board() {\n  const [square, setSquare] = useState(Array(9).fill(null));\n  const [xIsNext, setxIsNext] = useState(true);\n\n  function clicked(i) {\n    const nextSquare = square.slice();\n\n    if (square[i]) {\n      return;\n    }\n\n    if (xIsNext) {\n      nextSquare[i] = \"X\";\n    } else {\n      nextSquare[i] = \"O\";\n    }\n    setSquare(nextSquare);\n    setxIsNext(!xIsNext);\n  }\n\n  return (\n    <>\n      <div className=\"board-row\">\n        <Square value={square[0]} clicked={() => clicked(0)} />\n        <Square value={square[1]} clicked={() => clicked(1)} />\n        <Square value={square[2]} clicked={() => clicked(2)} />\n      </div>\n\n      <div className=\"board-row\">\n        <Square value={square[3]} clicked={() => clicked(3)} />\n        <Square value={square[4]} clicked={() => clicked(4)} />\n        <Square value={square[5]} clicked={() => clicked(5)} />\n      </div>\n\n      <div className=\"board-row\">\n        <Square value={square[6]} clicked={() => clicked(6)} />\n        <Square value={square[7]} clicked={() => clicked(7)} />\n        <Square value={square[8]} clicked={() => clicked(8)} />\n      </div>\n    </>\n  );\n}\n\nfunction Square({ clicked, value }) {\n  return (\n    <button className=\"square\" onClick={clicked}>\n      {value}\n    </button>\n  );\n}\n\nfunction calculateWinner(square) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n\n    if (square[a] && square[a] === square[b] && square[a] === square[c]) {\n      return square[a];\n    }\n\n    return null;\n  }\n\n  console.log(lines);\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}